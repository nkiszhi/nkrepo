check.py 		:	统计整个DATA文件夹下的所有SHA256病毒文件名称写入sha256.txt中，屏幕输出文件总数

count_f_info.py	:  统计DATA文件夹中f_pack_info.csv的个数输出到屏幕上
count_labels.py	:  统计DATA文件夹中json文件个数(virustotal检测过的个数)
count_samples.py:  统计DATA文件夹有多少个病毒样本

del_sample.py	:  输入一个sha256.txt文件，删除文件中的样本，将已删除/不存在的文件个数输出在屏幕上

init_repo.py	:  检测DATA文件夹下sha[0][1][2][3]是否缺少,如缺少则补充缺少的文件夹,并在屏幕上输出补充文件夹的个数

stat.py	: 先统计一下哪个sha[0][1][2][3]文件夹中不存在f_info.csv文件,对不存在f_info.csv的文件夹创建一个csv文件,文件主要包括该目录下样本的各种信息

get_json_list.py: 将数据集中所有后缀为json的文件名写入json.txt的文本文档中
get_samples_info_about_userdb.py,是将所有病毒文件中userdb.txt文件信息收集，放入pack.csv文件中
get_samples_info_about_allpe32.py,是将所有病毒文件中所有pe文件信息收集，放入f_info_del.csv
get_info_count将f_info_del.csv中文件大小的信息统计分组，单位为kb,并将结果写入all_KB_size.csv
get_filetype将f_info_del.csv中的内容经过判断后放入f_pack_del.csv,f_pack_del.csv是pe32文件中除了userdb.txt之外的文件

search-ch.py	:
					传入一个sha256,先判断是否为pe文件,若不是pe文件退出程序
					若是pe文件,输出:
						1.文件路径
						2.MD5值
						3.SHA-1
						4.SHA-256
						5.文件访问时间
						6.文件内容修改时间
						7.文件属性修改时间
						8.文件大小
						9.导入表
						10.导出表
						11.文件类型
						12.文件头信息
						13.恶意api检测
						14.编译器和加壳信息监测
						15.异常信息监测
